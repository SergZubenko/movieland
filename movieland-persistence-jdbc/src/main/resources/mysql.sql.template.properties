sql.common.orderBy=order by
#COUNTRY
sql.country.allCountries=select id, country from countries order by country
sql.country.movie.moviesCountries=select c.id, c.country, movie_id from countries c inner join movies_countries mc on mc.country_id = c.id where movie_id in (:ids)
sql.country.movie.addCountries=insert ignore into movies_countries(movie_id, country_id) values (?,?)
sql.country.movie.clearCountriesEx=delete from movies_countries where movie_id = :movieId and country_id not in(:ids)
sql.country.movie.clearCountries=delete from movies_countries where movie_id = ?
#GENRE
sql.genre.allGenres=select id, genre from genres order by genre
sql.genre.movie.moviesGenres=select g.id, g.genre, movie_id from genres g inner join movies_genres mg on mg.genre_id = g.id  where movie_id in (:ids)
sql.genre.movie.addGenres=insert ignore into movies_genres(movie_id, genre_id) values (?,?)
sql.genre.movie.clearGenresEx=delete from movies_genres where movie_id = :movieId and genre_id not in(:ids)
sql.genre.movie.clearGenres=delete from movies_genres where movie_id = ?

#MOVIE
sql.movie.movieByID=SELECT id, movie_name, movie_name_origin, year, description, rating, price, picture_path FROM movies WHERE id = ?
sql.movie.allMovies=SELECT id, movie_name, movie_name_origin, year, description, rating, price, picture_path FROM movies
sql.movie.randomThreeMovies=SELECT id, movie_name, movie_name_origin, year, description, rating, price, picture_path FROM  movies ORDER BY rand() LIMIT 3
sql.movie.moviesByGenre=SELECT m.id, movie_name, movie_name_origin, year, description, rating, price, picture_path FROM  movies m \
JOIN movies_genres  mg ON mg.movie_id = m.id WHERE mg.genre_id = ?
sql.movie.save=insert into movies (id, movie_name, movie_name_origin, year, description, rating, price, picture_path) \
values (:id, :movie_name, :movie_name_origin, :year, :description, :rating, :price, :picture_path) \
ON DUPLICATE KEY UPDATE \
movie_name = ifnull(:movie_name, movie_name), \
movie_name_origin =ifnull(:movie_name_origin, movie_name_origin), \
year = ifnull(:year, year), \
description=ifnull(:description, description), \
rating= ifnull(:rating,rating), \
price = ifnull(:price, price), \
picture_path = ifnull(:picture_path, picture_path)

#REVIEW
sql.review.reviewWithUser=select r.id review_id, r.user_id, r.text,  username, email, movie_id from reviews \
   r  join users u on u.id = r.user_id where r.movie_id  in (:ids)
sql.review.save=replace into reviews (id, user_id, text, movie_id) VALUES (?, ?, ?, ?)
#USER
sql.user.getAll=select id, username, email from users
sql.user.getByEmail=select id, username, email from users where email = ? and password = ?
sql.user.getUserRoles=select role from user_roles where user_id = ?
#RATE
sql.rates.getRateStats=select movie_id, sum(rating)/count(*) rating, count(1) votes from user_movie_rate where movie_id in (:ids)
sql.rates.save=replace into user_movie_rate(movie_id, user_id, rating) values (?,?,?)